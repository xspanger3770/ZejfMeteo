# CMAKE generated file: DO NOT EDIT!
# Generated by "Unix Makefiles" Generator, CMake Version 3.22

# Default target executed when no arguments are given to make.
default_target: all
.PHONY : default_target

# Allow only one "make -f Makefile2" at a time, but pass parallelism.
.NOTPARALLEL:

#=============================================================================
# Special targets provided by cmake.

# Disable implicit rules so canonical targets will work.
.SUFFIXES:

# Disable VCS-based implicit rules.
% : %,v

# Disable VCS-based implicit rules.
% : RCS/%

# Disable VCS-based implicit rules.
% : RCS/%,v

# Disable VCS-based implicit rules.
% : SCCS/s.%

# Disable VCS-based implicit rules.
% : s.%

.SUFFIXES: .hpux_make_needs_suffix_list

# Command-line flag to silence nested $(MAKE).
$(VERBOSE)MAKESILENT = -s

#Suppress display of executed commands.
$(VERBOSE).SILENT:

# A target that is always out of date.
cmake_force:
.PHONY : cmake_force

#=============================================================================
# Set environment variables for the build.

# The shell in which to execute make rules.
SHELL = /bin/sh

# The CMake executable.
CMAKE_COMMAND = /usr/bin/cmake

# The command to remove a file.
RM = /usr/bin/cmake -E rm -f

# Escaping for special characters.
EQUALS = =

# The top-level source directory on which CMake was run.
CMAKE_SOURCE_DIR = /home/jakublinux/Desktop/All/CProjects/ZejfMeteo

# The top-level build directory on which CMake was run.
CMAKE_BINARY_DIR = /home/jakublinux/Desktop/All/CProjects/ZejfMeteo/release

#=============================================================================
# Targets provided globally by CMake.

# Special rule for the target edit_cache
edit_cache:
	@$(CMAKE_COMMAND) -E cmake_echo_color --switch=$(COLOR) --cyan "No interactive CMake dialog available..."
	/usr/bin/cmake -E echo No\ interactive\ CMake\ dialog\ available.
.PHONY : edit_cache

# Special rule for the target edit_cache
edit_cache/fast: edit_cache
.PHONY : edit_cache/fast

# Special rule for the target rebuild_cache
rebuild_cache:
	@$(CMAKE_COMMAND) -E cmake_echo_color --switch=$(COLOR) --cyan "Running CMake to regenerate build system..."
	/usr/bin/cmake --regenerate-during-build -S$(CMAKE_SOURCE_DIR) -B$(CMAKE_BINARY_DIR)
.PHONY : rebuild_cache

# Special rule for the target rebuild_cache
rebuild_cache/fast: rebuild_cache
.PHONY : rebuild_cache/fast

# The main all target
all: cmake_check_build_system
	cd /home/jakublinux/Desktop/All/CProjects/ZejfMeteo/release && $(CMAKE_COMMAND) -E cmake_progress_start /home/jakublinux/Desktop/All/CProjects/ZejfMeteo/release/CMakeFiles /home/jakublinux/Desktop/All/CProjects/ZejfMeteo/release/lib/zejf_api/src//CMakeFiles/progress.marks
	cd /home/jakublinux/Desktop/All/CProjects/ZejfMeteo/release && $(MAKE) $(MAKESILENT) -f CMakeFiles/Makefile2 lib/zejf_api/src/all
	$(CMAKE_COMMAND) -E cmake_progress_start /home/jakublinux/Desktop/All/CProjects/ZejfMeteo/release/CMakeFiles 0
.PHONY : all

# The main clean target
clean:
	cd /home/jakublinux/Desktop/All/CProjects/ZejfMeteo/release && $(MAKE) $(MAKESILENT) -f CMakeFiles/Makefile2 lib/zejf_api/src/clean
.PHONY : clean

# The main clean target
clean/fast: clean
.PHONY : clean/fast

# Prepare targets for installation.
preinstall: all
	cd /home/jakublinux/Desktop/All/CProjects/ZejfMeteo/release && $(MAKE) $(MAKESILENT) -f CMakeFiles/Makefile2 lib/zejf_api/src/preinstall
.PHONY : preinstall

# Prepare targets for installation.
preinstall/fast:
	cd /home/jakublinux/Desktop/All/CProjects/ZejfMeteo/release && $(MAKE) $(MAKESILENT) -f CMakeFiles/Makefile2 lib/zejf_api/src/preinstall
.PHONY : preinstall/fast

# clear depends
depend:
	cd /home/jakublinux/Desktop/All/CProjects/ZejfMeteo/release && $(CMAKE_COMMAND) -S$(CMAKE_SOURCE_DIR) -B$(CMAKE_BINARY_DIR) --check-build-system CMakeFiles/Makefile.cmake 1
.PHONY : depend

# Convenience name for target.
lib/zejf_api/src/CMakeFiles/zejf_api.dir/rule:
	cd /home/jakublinux/Desktop/All/CProjects/ZejfMeteo/release && $(MAKE) $(MAKESILENT) -f CMakeFiles/Makefile2 lib/zejf_api/src/CMakeFiles/zejf_api.dir/rule
.PHONY : lib/zejf_api/src/CMakeFiles/zejf_api.dir/rule

# Convenience name for target.
zejf_api: lib/zejf_api/src/CMakeFiles/zejf_api.dir/rule
.PHONY : zejf_api

# fast build rule for target.
zejf_api/fast:
	cd /home/jakublinux/Desktop/All/CProjects/ZejfMeteo/release && $(MAKE) $(MAKESILENT) -f lib/zejf_api/src/CMakeFiles/zejf_api.dir/build.make lib/zejf_api/src/CMakeFiles/zejf_api.dir/build
.PHONY : zejf_api/fast

data_check.o: data_check.c.o
.PHONY : data_check.o

# target to build an object file
data_check.c.o:
	cd /home/jakublinux/Desktop/All/CProjects/ZejfMeteo/release && $(MAKE) $(MAKESILENT) -f lib/zejf_api/src/CMakeFiles/zejf_api.dir/build.make lib/zejf_api/src/CMakeFiles/zejf_api.dir/data_check.c.o
.PHONY : data_check.c.o

data_check.i: data_check.c.i
.PHONY : data_check.i

# target to preprocess a source file
data_check.c.i:
	cd /home/jakublinux/Desktop/All/CProjects/ZejfMeteo/release && $(MAKE) $(MAKESILENT) -f lib/zejf_api/src/CMakeFiles/zejf_api.dir/build.make lib/zejf_api/src/CMakeFiles/zejf_api.dir/data_check.c.i
.PHONY : data_check.c.i

data_check.s: data_check.c.s
.PHONY : data_check.s

# target to generate assembly for a file
data_check.c.s:
	cd /home/jakublinux/Desktop/All/CProjects/ZejfMeteo/release && $(MAKE) $(MAKESILENT) -f lib/zejf_api/src/CMakeFiles/zejf_api.dir/build.make lib/zejf_api/src/CMakeFiles/zejf_api.dir/data_check.c.s
.PHONY : data_check.c.s

data_info.o: data_info.c.o
.PHONY : data_info.o

# target to build an object file
data_info.c.o:
	cd /home/jakublinux/Desktop/All/CProjects/ZejfMeteo/release && $(MAKE) $(MAKESILENT) -f lib/zejf_api/src/CMakeFiles/zejf_api.dir/build.make lib/zejf_api/src/CMakeFiles/zejf_api.dir/data_info.c.o
.PHONY : data_info.c.o

data_info.i: data_info.c.i
.PHONY : data_info.i

# target to preprocess a source file
data_info.c.i:
	cd /home/jakublinux/Desktop/All/CProjects/ZejfMeteo/release && $(MAKE) $(MAKESILENT) -f lib/zejf_api/src/CMakeFiles/zejf_api.dir/build.make lib/zejf_api/src/CMakeFiles/zejf_api.dir/data_info.c.i
.PHONY : data_info.c.i

data_info.s: data_info.c.s
.PHONY : data_info.s

# target to generate assembly for a file
data_info.c.s:
	cd /home/jakublinux/Desktop/All/CProjects/ZejfMeteo/release && $(MAKE) $(MAKESILENT) -f lib/zejf_api/src/CMakeFiles/zejf_api.dir/build.make lib/zejf_api/src/CMakeFiles/zejf_api.dir/data_info.c.s
.PHONY : data_info.c.s

data_request.o: data_request.c.o
.PHONY : data_request.o

# target to build an object file
data_request.c.o:
	cd /home/jakublinux/Desktop/All/CProjects/ZejfMeteo/release && $(MAKE) $(MAKESILENT) -f lib/zejf_api/src/CMakeFiles/zejf_api.dir/build.make lib/zejf_api/src/CMakeFiles/zejf_api.dir/data_request.c.o
.PHONY : data_request.c.o

data_request.i: data_request.c.i
.PHONY : data_request.i

# target to preprocess a source file
data_request.c.i:
	cd /home/jakublinux/Desktop/All/CProjects/ZejfMeteo/release && $(MAKE) $(MAKESILENT) -f lib/zejf_api/src/CMakeFiles/zejf_api.dir/build.make lib/zejf_api/src/CMakeFiles/zejf_api.dir/data_request.c.i
.PHONY : data_request.c.i

data_request.s: data_request.c.s
.PHONY : data_request.s

# target to generate assembly for a file
data_request.c.s:
	cd /home/jakublinux/Desktop/All/CProjects/ZejfMeteo/release && $(MAKE) $(MAKESILENT) -f lib/zejf_api/src/CMakeFiles/zejf_api.dir/build.make lib/zejf_api/src/CMakeFiles/zejf_api.dir/data_request.c.s
.PHONY : data_request.c.s

linked_list.o: linked_list.c.o
.PHONY : linked_list.o

# target to build an object file
linked_list.c.o:
	cd /home/jakublinux/Desktop/All/CProjects/ZejfMeteo/release && $(MAKE) $(MAKESILENT) -f lib/zejf_api/src/CMakeFiles/zejf_api.dir/build.make lib/zejf_api/src/CMakeFiles/zejf_api.dir/linked_list.c.o
.PHONY : linked_list.c.o

linked_list.i: linked_list.c.i
.PHONY : linked_list.i

# target to preprocess a source file
linked_list.c.i:
	cd /home/jakublinux/Desktop/All/CProjects/ZejfMeteo/release && $(MAKE) $(MAKESILENT) -f lib/zejf_api/src/CMakeFiles/zejf_api.dir/build.make lib/zejf_api/src/CMakeFiles/zejf_api.dir/linked_list.c.i
.PHONY : linked_list.c.i

linked_list.s: linked_list.c.s
.PHONY : linked_list.s

# target to generate assembly for a file
linked_list.c.s:
	cd /home/jakublinux/Desktop/All/CProjects/ZejfMeteo/release && $(MAKE) $(MAKESILENT) -f lib/zejf_api/src/CMakeFiles/zejf_api.dir/build.make lib/zejf_api/src/CMakeFiles/zejf_api.dir/linked_list.c.s
.PHONY : linked_list.c.s

zejf_api.o: zejf_api.c.o
.PHONY : zejf_api.o

# target to build an object file
zejf_api.c.o:
	cd /home/jakublinux/Desktop/All/CProjects/ZejfMeteo/release && $(MAKE) $(MAKESILENT) -f lib/zejf_api/src/CMakeFiles/zejf_api.dir/build.make lib/zejf_api/src/CMakeFiles/zejf_api.dir/zejf_api.c.o
.PHONY : zejf_api.c.o

zejf_api.i: zejf_api.c.i
.PHONY : zejf_api.i

# target to preprocess a source file
zejf_api.c.i:
	cd /home/jakublinux/Desktop/All/CProjects/ZejfMeteo/release && $(MAKE) $(MAKESILENT) -f lib/zejf_api/src/CMakeFiles/zejf_api.dir/build.make lib/zejf_api/src/CMakeFiles/zejf_api.dir/zejf_api.c.i
.PHONY : zejf_api.c.i

zejf_api.s: zejf_api.c.s
.PHONY : zejf_api.s

# target to generate assembly for a file
zejf_api.c.s:
	cd /home/jakublinux/Desktop/All/CProjects/ZejfMeteo/release && $(MAKE) $(MAKESILENT) -f lib/zejf_api/src/CMakeFiles/zejf_api.dir/build.make lib/zejf_api/src/CMakeFiles/zejf_api.dir/zejf_api.c.s
.PHONY : zejf_api.c.s

zejf_data.o: zejf_data.c.o
.PHONY : zejf_data.o

# target to build an object file
zejf_data.c.o:
	cd /home/jakublinux/Desktop/All/CProjects/ZejfMeteo/release && $(MAKE) $(MAKESILENT) -f lib/zejf_api/src/CMakeFiles/zejf_api.dir/build.make lib/zejf_api/src/CMakeFiles/zejf_api.dir/zejf_data.c.o
.PHONY : zejf_data.c.o

zejf_data.i: zejf_data.c.i
.PHONY : zejf_data.i

# target to preprocess a source file
zejf_data.c.i:
	cd /home/jakublinux/Desktop/All/CProjects/ZejfMeteo/release && $(MAKE) $(MAKESILENT) -f lib/zejf_api/src/CMakeFiles/zejf_api.dir/build.make lib/zejf_api/src/CMakeFiles/zejf_api.dir/zejf_data.c.i
.PHONY : zejf_data.c.i

zejf_data.s: zejf_data.c.s
.PHONY : zejf_data.s

# target to generate assembly for a file
zejf_data.c.s:
	cd /home/jakublinux/Desktop/All/CProjects/ZejfMeteo/release && $(MAKE) $(MAKESILENT) -f lib/zejf_api/src/CMakeFiles/zejf_api.dir/build.make lib/zejf_api/src/CMakeFiles/zejf_api.dir/zejf_data.c.s
.PHONY : zejf_data.c.s

zejf_network.o: zejf_network.c.o
.PHONY : zejf_network.o

# target to build an object file
zejf_network.c.o:
	cd /home/jakublinux/Desktop/All/CProjects/ZejfMeteo/release && $(MAKE) $(MAKESILENT) -f lib/zejf_api/src/CMakeFiles/zejf_api.dir/build.make lib/zejf_api/src/CMakeFiles/zejf_api.dir/zejf_network.c.o
.PHONY : zejf_network.c.o

zejf_network.i: zejf_network.c.i
.PHONY : zejf_network.i

# target to preprocess a source file
zejf_network.c.i:
	cd /home/jakublinux/Desktop/All/CProjects/ZejfMeteo/release && $(MAKE) $(MAKESILENT) -f lib/zejf_api/src/CMakeFiles/zejf_api.dir/build.make lib/zejf_api/src/CMakeFiles/zejf_api.dir/zejf_network.c.i
.PHONY : zejf_network.c.i

zejf_network.s: zejf_network.c.s
.PHONY : zejf_network.s

# target to generate assembly for a file
zejf_network.c.s:
	cd /home/jakublinux/Desktop/All/CProjects/ZejfMeteo/release && $(MAKE) $(MAKESILENT) -f lib/zejf_api/src/CMakeFiles/zejf_api.dir/build.make lib/zejf_api/src/CMakeFiles/zejf_api.dir/zejf_network.c.s
.PHONY : zejf_network.c.s

zejf_protocol.o: zejf_protocol.c.o
.PHONY : zejf_protocol.o

# target to build an object file
zejf_protocol.c.o:
	cd /home/jakublinux/Desktop/All/CProjects/ZejfMeteo/release && $(MAKE) $(MAKESILENT) -f lib/zejf_api/src/CMakeFiles/zejf_api.dir/build.make lib/zejf_api/src/CMakeFiles/zejf_api.dir/zejf_protocol.c.o
.PHONY : zejf_protocol.c.o

zejf_protocol.i: zejf_protocol.c.i
.PHONY : zejf_protocol.i

# target to preprocess a source file
zejf_protocol.c.i:
	cd /home/jakublinux/Desktop/All/CProjects/ZejfMeteo/release && $(MAKE) $(MAKESILENT) -f lib/zejf_api/src/CMakeFiles/zejf_api.dir/build.make lib/zejf_api/src/CMakeFiles/zejf_api.dir/zejf_protocol.c.i
.PHONY : zejf_protocol.c.i

zejf_protocol.s: zejf_protocol.c.s
.PHONY : zejf_protocol.s

# target to generate assembly for a file
zejf_protocol.c.s:
	cd /home/jakublinux/Desktop/All/CProjects/ZejfMeteo/release && $(MAKE) $(MAKESILENT) -f lib/zejf_api/src/CMakeFiles/zejf_api.dir/build.make lib/zejf_api/src/CMakeFiles/zejf_api.dir/zejf_protocol.c.s
.PHONY : zejf_protocol.c.s

zejf_routing.o: zejf_routing.c.o
.PHONY : zejf_routing.o

# target to build an object file
zejf_routing.c.o:
	cd /home/jakublinux/Desktop/All/CProjects/ZejfMeteo/release && $(MAKE) $(MAKESILENT) -f lib/zejf_api/src/CMakeFiles/zejf_api.dir/build.make lib/zejf_api/src/CMakeFiles/zejf_api.dir/zejf_routing.c.o
.PHONY : zejf_routing.c.o

zejf_routing.i: zejf_routing.c.i
.PHONY : zejf_routing.i

# target to preprocess a source file
zejf_routing.c.i:
	cd /home/jakublinux/Desktop/All/CProjects/ZejfMeteo/release && $(MAKE) $(MAKESILENT) -f lib/zejf_api/src/CMakeFiles/zejf_api.dir/build.make lib/zejf_api/src/CMakeFiles/zejf_api.dir/zejf_routing.c.i
.PHONY : zejf_routing.c.i

zejf_routing.s: zejf_routing.c.s
.PHONY : zejf_routing.s

# target to generate assembly for a file
zejf_routing.c.s:
	cd /home/jakublinux/Desktop/All/CProjects/ZejfMeteo/release && $(MAKE) $(MAKESILENT) -f lib/zejf_api/src/CMakeFiles/zejf_api.dir/build.make lib/zejf_api/src/CMakeFiles/zejf_api.dir/zejf_routing.c.s
.PHONY : zejf_routing.c.s

# Help Target
help:
	@echo "The following are some of the valid targets for this Makefile:"
	@echo "... all (the default if no target is provided)"
	@echo "... clean"
	@echo "... depend"
	@echo "... edit_cache"
	@echo "... rebuild_cache"
	@echo "... zejf_api"
	@echo "... data_check.o"
	@echo "... data_check.i"
	@echo "... data_check.s"
	@echo "... data_info.o"
	@echo "... data_info.i"
	@echo "... data_info.s"
	@echo "... data_request.o"
	@echo "... data_request.i"
	@echo "... data_request.s"
	@echo "... linked_list.o"
	@echo "... linked_list.i"
	@echo "... linked_list.s"
	@echo "... zejf_api.o"
	@echo "... zejf_api.i"
	@echo "... zejf_api.s"
	@echo "... zejf_data.o"
	@echo "... zejf_data.i"
	@echo "... zejf_data.s"
	@echo "... zejf_network.o"
	@echo "... zejf_network.i"
	@echo "... zejf_network.s"
	@echo "... zejf_protocol.o"
	@echo "... zejf_protocol.i"
	@echo "... zejf_protocol.s"
	@echo "... zejf_routing.o"
	@echo "... zejf_routing.i"
	@echo "... zejf_routing.s"
.PHONY : help



#=============================================================================
# Special targets to cleanup operation of make.

# Special rule to run CMake to check the build system integrity.
# No rule that depends on this can have commands that come from listfiles
# because they might be regenerated.
cmake_check_build_system:
	cd /home/jakublinux/Desktop/All/CProjects/ZejfMeteo/release && $(CMAKE_COMMAND) -S$(CMAKE_SOURCE_DIR) -B$(CMAKE_BINARY_DIR) --check-build-system CMakeFiles/Makefile.cmake 0
.PHONY : cmake_check_build_system

